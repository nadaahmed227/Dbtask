<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIQDg8RDxIQDw8OEBAVEA8QEBEOEhAQFRIXFhUSGBYY
        HCggGBonGxUVITEhJSsrLi4xFyAzODMsNygtLi3/2wBDAQoKCg4NDhsQEBs2JSAlKy0tKzEtLS0tLSst
        Ky0rLTU3Ny0tKy8tKy8tNy0tMSsrKy4tLSsvOC0rKy0tKzMyKy3/wAARCADpANgDASIAAhEBAxEB/8QA
        HAABAAICAwEAAAAAAAAAAAAAAAUHBAYCAwgB/8QARxAAAQMCAQMOCwcDBAMAAAAAAQACAwQREgUGIQcT
        FhcxQVFTVGF0k7LRFCI0NVKBkZKU0tMVIzJxc6GzQqLBYoLi8EOx4f/EABkBAQEBAQEBAAAAAAAAAAAA
        AAABAgMFBP/EACIRAQEAAgEDBQEBAAAAAAAAAAABAhEDEiExEzJBUWEEIv/aAAwDAQACEQMRAD8AvFER
        AREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBER
        AREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREHy6
        +rUs/c825NjaGtEtTMDrcZNmtA0F7rabX3hu826qu2z8pYsWuxWvbBrLcF/R4f3utTC1m5SL+RajmBno
        3KUbmvaIqmEDXI2m7XNP/kZfTa+8dzn3Vtylmll2IiKKIiICIiAiIgIiICIiAiIgIiICIiAi6KqrjiGK
        WRkTeGR7WD2krE+3qTlVL8RF8yCSRRv29ScqpfiIvmT7epOVUvxEXzIJB7wBckADdJNgunwyPjI/fb3q
        t9WPK8clFAyCeKTFUDXGRSteS0RuIxBp3L2/ZaLkHMSsroBPTiExlzmjHJgddpsdFluY9t2sXLvpn6rj
        icrPdcOaYINbIcCMIxXA/wB2L2qzW1+Tvsf8UHgfg9tb8Xdw/hw7uO/ruq1GpXlH0afrj8q+bVWUfRp+
        u/4rV1ryzN78OGpI4jK0ZBwsEE+uEuDRhs2wP+7D7FevhsfGR++3vVHHUryj6NP13/FR2XsxKyigM9QI
        RGHNacEmN13Gw0WCWTK+Vlsj0Ox4cLggg74NwuSq7UbyvHHR1DJ5448NR92yWVrLNMbb4Q47l7rf/t6k
        5VS/ERfMudmrpuXaSRRv29ScqpfiIvmT7epOVUvxEXzKKkkXRS1kcoxRSRyt4Y3tePaF3oCIiAiIgIiI
        CIiAiIgLEypWiCnmmdpEMb3kcOEXsstQuenmyt6PL2UKo2lo6zLla83EkpBeTI4tjhZfQ1ug2GkCwGlT
        e1FXelSe+/5Flah3llX0dn8iuddMsrLqOeOMs3VHbUVd6VJ77/kTairvSpPff8ivBFPUq9Eeds6MyKjJ
        sUck5gLZZMA1pznHFhLtN2jRZpVg6luX6WnyYyOeohikEsxwPeGmxdoNlsWfua5ynSsibIInxSB7HObi
        aThLSCPycq/2n6rlNP1cneruZTumrL2WZsuoOV03WtTZdQcrputaqz2n6nlNP7knem09Vcpp/ck71OnH
        7XeX0szZdQcrputatS1Uc4KSfJckcFRDLIZYSGMeHOsHXJsoDaequU0/Vyd6bT1Vymn6uTvVkxnyluX0
        1vNfMmoylHJJAYQ2J+Bwlc5pvhDtFmnRpU1tRV3pUnvv+RWVmDmqcmUz43SCWSWQve5rcLQcIaAAeZoW
        zJeS77LMJ8qP2oq70qT33/Im1FXelSe+/wCRXginqU6I851lDWZDrYziEcoAe10TrxzMvYtcLC43iCO9
        egsk1oqKeGZugTRseBwYheyqTVx8spP0JO2FZeZPmyi6PH2Uy7yUx7XSbREWGxERAREQEREBERAULnp5
        srejy9lTShc9PNlb0eXsqzylVlqH+WVXR2fyK51TGof5ZVdHZ/IrnWs/KYeGPX1jIYnySGzGC5/wFW+U
        M4aqrkwRY2tcTghivitwuI0n/wBKe1SZiIoGDcfI4nnwt0D+6/qWVmDRNZSCUAY5nOu7fwtcWhv7X9a+
        rimPFxerZu3w+HmufLy+lLqTy1GaGvphrjvCIx6WMvA/PSbetbbmlnMag61NYTAXa4CwkA3dG8eZbM9g
        IIIBBGkHTcKrKmLwXKeGPcinZh5muIOH2Ost45Y/0Y2Wasm+zGeOX82Usu5brutVECLz3pq8y1qrwU9T
        NA2nll1iR0bnhzGAvYcLgAdNgQQsLbki5JL1sa2vKeYVBUTPmkh+8kN3lj3MDnb7iAbX51i7WmTeJd1s
        net7xY1k17bki5JN1sabckXJJetjWw7WmTeJd1snem1pk3iXdbJ3pvA1k14askV9NJNbftJGSrIydWsq
        IYpo7mOZjXtJFjhcLi61kammTeJceYyyWP7ra4Ymsa1jAGsYA1rQLBrQLAAcCl18LN/KndXHyyk/Qk7Y
        Vl5lebKLo8fZVaauPllJ0eTthWXmV5soujx9lXL2xJ7qm0RFhsREQEREBERAREQFC56ebK3o8vZU0oXP
        TzZW9Hl7Ks8pVZah/llV0dn8iudUxqH+WVXR2fyK5lc/KYeGtZ/UBlpQ9ou6B2K3+gizv8H1KN1P8rtD
        TTPIBxF0V9GK+lzfz3Ss7O7OXwf7mIB0rh4xOlsbTzb5PAtKosjVEzDLFG5zQbhws25v/Tp0+pehw4dX
        B059p8PN5+Tp5+rj735WrlGtZBE6SQgNaOHSTvAcJKrXIkTqzKLXOH4pDLJwNaDe3ZavhyTXVBAeyZ+C
        9tcNgPamQ8rSUE7g9mgkCVjhZ4A3wf8AG4Vri4ejDKYXeVjny895M8bnNYyrURdNJUtljbIw4mPALTzL
        vXl+K9eXc7Kyy5qsCCqnhjpjI2CR8Ze6TBiex2F1hY6LgrB25HcjHXn5VvuUMz6GoldLNTRPkebufaxc
        eE231j7AMm8ki/u71uXFnWTStuR3Ix15+RNuR3Ix15+RbrsBybySL+7vXzYDk3kkX93em8TWTTBqyO5G
        Lc0+nsqz8l1zaiCGdlwyaNj2h2ggOF7HnUIMwcm38ki9dz/lbJGwNaGtADWgAACwAGgAKWz4Wb+VN6uP
        llJ+hJ2wrLzK82UXR4+yq01cfLKT9CTthWXmV5soujx9lXL2xJ7qm0RFhsREQEREBERAREQFC56ebK3o
        8vZU0oXPTzZW9Hl7Ks8pVZah/llV0dn8iuGrmEcb3u3I2OcfyAuqe1D/ACyq6Oz+RW9lGm12GWO+HXGO
        bfguLXWstdXdib6eyrsjxCqrAalwDXEvlLnAX/03PPYfkrLjyjTtADZYQ0AAAPaAANwBaOcxaj04T63d
        y+bBKj0ofa7uXoc04eW+/TzeD1uKX/G7flvf2pBx0XWN71reesVPPAZI5IjNFpFntu9m+3n4R+SiNglR
        6UPtd3JsEqPSh9ru5Y4+PhwymUzdOTk5s8bjeNJanNaSJYCbhtns5r6HD26fWt1utWzTzakpZHySuaS5
        uENZe27ck3W0r5v6bjlyW4+H0/y45Y8UmXlVmXtVeSCrqIYqZjmwSvjxSPc1zix2EmwGgXGjmssDbjn5
        LD1r+5WbW5tUc8hkmpoJJHbr3xNc4/mbaV0bDsn8jpepZ3LnvH6dtVX9DqvyuljbJSxhj3ta4skcXAOI
        GgEaTp3FbbToUTTZrUMT2vjpKdj2G7XNiYC08INlMLN1fDUl+RERRVM6uPllJ0eTthWXmV5soujx9lVp
        q4+WUn6EnbCsvMrzZRdHj7K3l7YxPdU2iIsNiIiAiIgIiICIiAoXPIXybW25PL2VNLhNGHtc1wu14IcD
        vgixCCmdRGQCtqWkgOdTtwgnS6z9NuHdCuhUfnBqa1tNOX0LXTw4iYzHI2OaMH+k3IvwXB0qN2MZa4mt
        +IH1F0sl77c5bOz0Ei8+7GMtcTW/ED6ibGMtcTW/ED6inRPtev8AHoNfF592MZa4mt+IH1E2MZa4mt+I
        H1E6J9nX+PQVkXn3Yxlria34gfUTYxlria34gfUTon2dX49BovPmxjLXE1vxA+omxjLXE1vxA+onRPs6
        /wAeg0XnzYxlria34gfUTYxlria34gfUTo/Tr/HoNF582MZa4mt+IH1E2MZa4mt+IH1E6J9nV+JrVvkB
        raZoILm07sQvpF36L8G4VZ+ZYtkyi6PF2VU+QdTatqZw6ua6CHEDI6SRsk0gH9IsTa40XJ0K7oIgxrWN
        GFrGgNA3gBYBMta0Y+duxERYbEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBE
        RAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBE
        RAREQEREBERAREQEREBERARYzq1glZFfx3se4cFmFoOnh8cLnUVLI24nuDWggXPCXBo/cgIO5F0xVLHY
        sLgcDsLuZ1r2/cLsxjm9qDki6Yqlj8WFwOBxa7es4boXGrrGxYMV/HkYwW0+M82bfmugyEXHF7OFMY5k
        HJF8Dl0VtY2FuJ4kIva0UMtQ73Y2uNueyDIRRzctwFsJDyfCGvdE0RyF72sBLiGYcW4Nyy62ZxUx3Xuj
        JljiDZoZoHmWS2BoZI0E3uN7fQSqKNky7Ttc9rpAHR3vdr7EggOaw2s9wLmgtbcgkDfXB2cNOA03lLXk
        DGKapc1rsWDC9wZaN2LQQ6xG+glUUUc4qURySOla1kQBc57Xsu0khrm3HjtJBsW3BtoUoCg+oiICIiAi
        IgIiICIiAuMgu0jhBXJEGnszTeY8Dm07WshqWQsBdIInPEYjfjLAXEYHHERcXG6dK4z5rzPZgf4M9sWv
        GPGXnXXSVDJ/HBYQweKW3GLdvzLcU4UGn12ajn48MdMGmfXNbbI+ASB0JYWuc2O4wEktNje5/CdK7qnN
        hxbKWNgdNJUCRkkhccLRC2Npddh1yxDjhOg33QdK2pP/AIg1KqzZeddwx0jw+aZ+F+JjZNdbbG8Bhs5h
        Jtu3udLVxfmpKWOiL49MkLjWhzm1Tw0sJafF0Wwm3jG997dO3FfQggKvJUr4adhZTOFMWEwlzxDNZjmk
        EYDhAJDhoduetR8uasj36fBw0Oc5zxjL52ukY7WnjDoa0NIGl19H4dN9uH/favoQQGQ8geDTOeNbDXCp
        BDLglr6l0kI3NxsZDea1hoWfV0LvBjDC8suAzXHPc57WE+O4ONyX4SbX37KQRBAuzeLamGaKVwbHI06y
        4RBjY2U8kTImEMxBt37hP9Tju2XXV5Im8GYxghkndUwzzySSPiBeyeOZwaQxxt921gvazQN21lsQRBrN
        XkmpmmL5G0w1tzXUxbNIQzC9ryxzNaGlxbpffRosNBvk0+SJS5hldGG69LPIyMucNfNhE0XAxNaLuubX
        cGmwU6viDT25tVDaaqiaKcvnptYaTLLYkte01BJYcBtIfu2gjd8ZbdTlxa3GGtfYYmtcXtB4A4tBI57B
        c19QEREBERAREQf/2Q==
</value>
  </data>
</root>